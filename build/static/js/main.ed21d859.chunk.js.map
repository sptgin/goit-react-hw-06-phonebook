{"version":3,"sources":["components/Section.js","components/ContactForm.js","components/Filter.js","components/ContactListItem.js","components/ContactsList.js","App.js","index.js"],"names":["Section","title","children","className","ContactForm","onSubmit","nameId","uuid","numberId","useState","name","setName","number","setNumber","formChange","event","currentTarget","value","formReset","preventDefault","contact","id","htmlFor","type","pattern","required","onChange","PropsType","func","isRequired","Filter","ContactListItem","onDeleteContact","onClick","prototype","PropTypes","string","ContactsList","findContact","map","App","JSON","parse","localStorage","getItem","contacts","setContacts","filter","setFilter","useEffect","setItem","stringify","find","toLocaleLowerCase","alert","normalizedFilter","length","toLowerCase","includes","contactId","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ed21d859.chunk.js","sourcesContent":["import React from 'react';\nimport './Section.css';\nimport PropTypes from 'prop-types';\n\nfunction Section({ title, children }) {\n  return (\n    <div className=\"task__section\">\n      {title && <h2>{title}</h2>}\n      {children}\n    </div>\n  );\n}\n\nSection.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.node,\n};\n\nexport default Section;\n","import React, { useState } from 'react';\nimport PropsType from 'prop-types';\nimport { v4 as uuid } from 'uuid';\nimport './ContactForm.css';\n\nexport default function ContactForm({ onSubmit }) {\n  let nameId = uuid();\n  let numberId = uuid();\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const formChange = event => {\n    const { name, value } = event.currentTarget;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const formSubmit = event => {\n    event.preventDefault();\n    const contact = {\n      id: uuid(),\n      name: name,\n      number: number,\n    };\n    onSubmit(contact);\n    formReset();\n  };\n\n  const formReset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <form className=\"contacts__form\" onSubmit={formSubmit}>\n      <label className=\"contcts__form-label\" htmlFor={nameId}>\n        Name\n        <input\n          className=\"contcts__form-input\"\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n          value={name}\n          onChange={formChange}\n          id={nameId}\n        />\n      </label>\n      <label className=\"contcts__form-label\" htmlFor={numberId}>\n        Number\n        <input\n          className=\"contcts__form-input\"\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять из цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n          value={number}\n          onChange={formChange}\n          id={numberId}\n        />\n      </label>\n      <button className=\"contacts__form-button\" type=\"submit\">\n        Add contact\n      </button>\n    </form>\n  );\n}\n\nContactForm.PropsType = {\n  onSubmit: PropsType.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './Filter.css';\n\nexport default function Filter({ value, onChange }) {\n  return (\n    <div>\n      <h3 className=\"filter__header\">Find contacts by name :</h3>\n      <input\n        type=\"text\"\n        name=\"filter\"\n        value={value}\n        onChange={onChange}\n        className=\"filter__input\"\n      />\n    </div>\n  );\n}\n\nFilter.propTypes = {\n  value: PropTypes.string,\n  onChange: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport './ContactListItem.css';\n\nconst ContactListItem = ({ id, name, number, onDeleteContact }) => {\n  return (\n    <li className=\"contact__list-item\">\n      <div>\n        {name}: {number}\n      </div>\n      <button\n        className=\"contact__list-delete-button\"\n        type=\"submit\"\n        onClick={() => onDeleteContact(id)}\n      >\n        Delete\n      </button>\n    </li>\n  );\n};\n\nContactListItem.prototype = {\n  id: PropTypes.number.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.number.isRequired,\n  onDeleteContact: PropTypes.func.isRequired,\n};\n\nexport default ContactListItem;\n","import ContactListItem from './ContactListItem';\nimport PropTypes from 'prop-types';\nimport './ContactsList.css';\n\nconst ContactsList = ({ findContact, onDeleteContact }) => {\n  return (\n    <ul className=\"contact__list\">\n      {findContact().map(({ id, name, number }) => {\n        return (\n          <ContactListItem\n            className=\"contacts__list-item\"\n            key={id}\n            id={id}\n            name={name}\n            number={number}\n            onDeleteContact={onDeleteContact}\n          />\n        );\n      })}\n    </ul>\n  );\n};\n\nContactsList.prototype = {\n  findContact: PropTypes.func.isRequired,\n  onDeleteContact: PropTypes.func.isRequired,\n};\n\nexport default ContactsList;\n","import React, { useState, useEffect } from 'react';\nimport Section from './components/Section';\nimport ContactForm from './components/ContactForm';\nimport Filter from './components/Filter';\nimport ContactsList from './components/ContactsList';\nimport './App.css';\n\nexport default function App() {\n  const [contacts, setContacts] = useState(\n    JSON.parse(localStorage.getItem('contacts')) ?? [],\n  );\n  const [filter, setFilter] = useState('');\n\n  useEffect(() => {\n    localStorage.setItem('contacts', JSON.stringify(contacts));\n  }, [contacts]);\n\n  const getChange = event => {\n    const { value } = event.currentTarget;\n    setFilter(value);\n  };\n\n  const checkContact = name => {\n    return contacts.find(contact => {\n      return contact.name.toLocaleLowerCase() === name.toLocaleLowerCase();\n    });\n  };\n\n  const addContact = contact => {\n    if (!checkContact(contact.name)) {\n      setContacts([contact, ...contacts]);\n    } else {\n      alert(`${contact.name} is already in contacts`);\n    }\n  };\n\n  const findContact = () => {\n    const normalizedFilter = filter.toLocaleLowerCase();\n    if (filter.length) {\n      return contacts.filter(contact =>\n        contact.name.toLowerCase().includes(normalizedFilter),\n      );\n    } else {\n      return contacts;\n    }\n  };\n\n  const deleteContact = contactId => {\n    setContacts(contacts.filter(contact => contact.id !== contactId));\n  };\n\n  return (\n    <div>\n      <h1 className=\"header__main\">React HW 006 Phonebook</h1>\n      <Section title=\"Phonebook\">\n        <ContactForm onSubmit={addContact} />\n      </Section>\n      <Section title=\"Contacts\">\n        <Filter value={filter} onChange={getChange} />\n        <ContactsList\n          findContact={findContact}\n          onDeleteContact={deleteContact}\n        />\n      </Section>\n    </div>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}